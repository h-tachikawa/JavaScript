version: '3'
services:
  db:
    image: mysql:5.7
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      TZ: Asia/Tokyo
      MYSQL_ROOT_PASSWORD: password
  redis:
    image: redis:3.2
    ports:
      - "6379:6379"
    environment:
      TZ: Asia/Tokyo
  web:
    build:
      context: .
      args:
        RAILS_ENV: development
        NODE_ENV: development
    command: yarn run start:dev
    volumes:
      - .:/app
      - bundle:/usr/local/bundle
      - /app/node_modules
    ports:
      - "3000:3000"
      - "8080:8080"
    links:
      - db
      - redis
      - mailhog
      - minio
      - localstack
    environment:
      TZ: Asia/Tokyo
      RAILS_ENV: development
      NODE_ENV: development
      AWS_ACCESS_KEY_ID: access_key_id
      AWS_SECRET_KEY: secret_key
      AWS_REGION: ap-northeast-1
      AWS_S3_BUCKET: resily
      AWS_S3_URL: http://localhost:9000/
      AWS_SQS_QUEUE_URL: http://localstack:4576/queue/bounces
      MINIO_HOST: minio
      MINIO_ENDPOINT: http://minio:9000
      RAILS_DATABASE_HOST: db
      RAILS_DATABASE_PASSWORD: password
  mailhog:
    image: blueimp/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
  minio:
    image: minio/minio
    command: server /data
    volumes:
      - minio-data:/data
      - minio-config:/root/.minio
    ports:
      - "9000:9000"
    environment:
      - MINIO_ACCESS_KEY=access_key_id
      - MINIO_SECRET_KEY=secret_key
      - MINIO_REGION=ap-northeast-1
  minio-cli:
    image: minio/mc
    links:
      - minio
    entrypoint: >
      /bin/sh -c "
      while ! nc -z minio 9000; do echo 'Wait minio to startup...' && sleep 1; done;
      sleep 5;
      mc config host add minio http://minio:9000 access_key_id secret_key S3v4;
      mc mb --region ap-northeast-1 minio/resily;
      mc policy download minio/resily;
      exit 0;
      "
  localstack:
    image: localstack/localstack:0.8.7
    ports:
      - "18080:8080"
      - "4567-4584:4567-4584"
    volumes:
      - localstack-data:/tmp/localstack
    environment:
      - HOSTNAME_EXTERNAL=localstack
      - DEFAULT_REGION=ap-northeast-1
      - SERVICES=sqs
      - DATA_DIR=/tmp/localstack
  awscli:
    image: mesosphere/aws-cli
    environment:
      - AWS_DEFAULT_REGION=ap-northeast-1
      - AWS_DEFAULT_OUTPUT=json
      - AWS_ACCESS_KEY_ID=access_key_id
      - AWS_SECRET_ACCESS_KEY=secret_key
    links:
      - localstack
    entrypoint: >
      /bin/sh -c "
      while ! nc -z localstack 4576; do echo 'Wait localstack to startup...' && sleep 1; done;
      sleep 5;
      aws --endpoint-url=http://localstack:4576 sqs create-queue --queue-name=bounces;
      exit 0;
      "
volumes:
  mysql-data:
    driver: local
  bundle:
    driver: local
  minio-data:
    driver: local
  minio-config:
    driver: local
  localstack-data:
    driver: local
