/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$1-name: '1';
$1-x: 0px;
$1-y: 0px;
$1-offset-x: 0px;
$1-offset-y: 0px;
$1-width: 30px;
$1-height: 30px;
$1-total-width: 90px;
$1-total-height: 60px;
$1-image: 'sprite.png';
$1: (0px, 0px, 0px, 0px, 30px, 30px, 90px, 60px, 'sprite.png', '1', );
$2-name: '2';
$2-x: 30px;
$2-y: 0px;
$2-offset-x: -30px;
$2-offset-y: 0px;
$2-width: 30px;
$2-height: 30px;
$2-total-width: 90px;
$2-total-height: 60px;
$2-image: 'sprite.png';
$2: (30px, 0px, -30px, 0px, 30px, 30px, 90px, 60px, 'sprite.png', '2', );
$3-name: '3';
$3-x: 0px;
$3-y: 30px;
$3-offset-x: 0px;
$3-offset-y: -30px;
$3-width: 30px;
$3-height: 30px;
$3-total-width: 90px;
$3-total-height: 60px;
$3-image: 'sprite.png';
$3: (0px, 30px, 0px, -30px, 30px, 30px, 90px, 60px, 'sprite.png', '3', );
$4-name: '4';
$4-x: 30px;
$4-y: 30px;
$4-offset-x: -30px;
$4-offset-y: -30px;
$4-width: 30px;
$4-height: 30px;
$4-total-width: 90px;
$4-total-height: 60px;
$4-image: 'sprite.png';
$4: (30px, 30px, -30px, -30px, 30px, 30px, 90px, 60px, 'sprite.png', '4', );
$5-name: '5';
$5-x: 60px;
$5-y: 0px;
$5-offset-x: -60px;
$5-offset-y: 0px;
$5-width: 30px;
$5-height: 30px;
$5-total-width: 90px;
$5-total-height: 60px;
$5-image: 'sprite.png';
$5: (60px, 0px, -60px, 0px, 30px, 30px, 90px, 60px, 'sprite.png', '5', );
$6-name: '6';
$6-x: 60px;
$6-y: 30px;
$6-offset-x: -60px;
$6-offset-y: -30px;
$6-width: 30px;
$6-height: 30px;
$6-total-width: 90px;
$6-total-height: 60px;
$6-image: 'sprite.png';
$6: (60px, 30px, -60px, -30px, 30px, 30px, 90px, 60px, 'sprite.png', '6', );
$spritesheet-width: 90px;
$spritesheet-height: 60px;
$spritesheet-image: 'sprite.png';
$spritesheet-sprites: ($1, $2, $3, $4, $5, $6, );
$spritesheet: (90px, 60px, 'sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
